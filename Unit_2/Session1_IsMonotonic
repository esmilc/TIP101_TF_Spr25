'''
Problem 1: Is Monotonic
Write a function is_monotonic() that takes in a list nums as a parameter and checks if it is either monotone increasing or monotone decreasing.
A list is monotone increasing if every element is either greater than or equal to the element before it.
A list is monotone decreasing if every element is either less than or equal to the element before it.
The function should return True if the given list is either monotone increasing or decreasing and False otherwise.
Hint: This is a lists problem

def monotonic(nums):
    pass
Example Usage:

nums1 = [1,2,2,3,10]
print(is_monotonic(nums1))

nums2 = [12,9,8,3,1]
print(is_monotonic(nums2))

nums3 = [1,1,1]
print(is_monotonic(nums3))

nums4 = [1,9,8,3,5]
print(is_monotonic(nums4))
Example Output:

True
True
True
False

'''

def is_monotonic(nums):
    if len(nums) < 2:
        return False
    
    def isIncreasing(nums):
        for i in range(len(nums)-1):
            if nums[i] > nums[i+1]:
                return False
        return True
    
    def isDecreasing(nums):
        for i in range(len(nums)-1):
            if nums[i] < nums[i+1]:
                return False
        return True
    
    func = None
    if nums[0] > nums[1]:
        func = isDecreasing
    else:
        func = isIncreasing

    return func(nums)

def is_monotonic2(nums):
    if len(nums) < 2:
        return True
    
    def isIncreasing(leftNum, rightNum):
        return leftNum <= rightNum
    
    def isDecreasing(leftNum, rightNum):
        return leftNum >= rightNum
    
    func = None
    if nums[0] > nums[1]:
        func = isDecreasing
    else:
        func = isIncreasing

    for i in range(len(nums)-1):
        if not func(nums[i], nums[i+1]):
            return False
    return True

nums1 = [1,2,2,3,10]
print(is_monotonic2(nums1))

nums2 = [12,9,8,3,1]
print(is_monotonic2(nums2))

nums3 = [1,1,1]
print(is_monotonic2(nums3))

nums4 = [1,9,8,3,5]
print(is_monotonic2(nums4))